@model CourseManagement.BLL.ViewModels.GradeListVM

@{
    ViewData["Title"] = "Grades";
}

<h2>Grades</h2>

<form method="get" asp-action="Index" class="row g-2 mb-3">
    <div class="col-auto">
        <input type="text"
               name="searchString"
               value="@Model.SearchString"
               class="form-control"
               placeholder="Search by Course Name" />
    </div>

    <div class="col-auto">
        <select name="pageSize" class="form-select" onchange="this.form.submit()">
            <option value="5" selected="@(Model.PageSize == 5)">5</option>
            <option value="10" selected="@(Model.PageSize == 10)">10</option>
            <option value="15" selected="@(Model.PageSize == 15)">15</option>
            <option value="20" selected="@(Model.PageSize == 20)">20</option>
        </select>
    </div>

    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

    <div class="col-auto ms-auto">
        <a asp-action="Create" class="btn btn-success">Add Grade</a>
    </div>
</form>

<table class="table table-striped table-bordered align-middle">
    <thead>
        <tr>
            <th>Value</th>
            <th>SessionId</th>
            <th>TraineeId</th>
            <th style="width:220px;"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Items.Any())
        {
            foreach (var grade in Model.Items)
            {
                <tr>
                    <td>@grade.Value</td>
                    <td>@grade.SessionId</td>
                    <td>@grade.TraineeId</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@grade.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@grade.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="5" class="text-center text-muted">No grades found.</td></tr>
        }
    </tbody>
</table>
<!--Pagenation-->
<nav aria-label="Grades pagination">
    <ul class="pagination">
        <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : null)">
            <a class="page-link"
                asp-action="Index"
                asp-route-pageNumber="@(Model.PageNumber - 1)"
                asp-route-pageSize="@Model.PageSize"
                asp-route-searchString="@Model.SearchString">Previous</a>
        </li>

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : null)">
                <a class="page-link"
                    asp-action="Index"
                    asp-route-pageNumber="@i"
                    asp-route-pageSize="@Model.PageSize"
                    asp-route-searchString="@Model.SearchString">@i</a>
            </li>
        }

        <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : null)">
            <a class="page-link"
                asp-action="Index"
                asp-route-pageNumber="@(Model.PageNumber + 1)"
                asp-route-pageSize="@Model.PageSize"
                asp-route-searchString="@Model.SearchString">Next</a>
        </li>
    </ul>
</nav>
